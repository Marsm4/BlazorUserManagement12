@page "/edit-movie/{id:int}"
@using BlazorMovieApp.Models
@using BlazorMovieApp.Services
@inject MovieService MovieService
@inject NavigationManager NavigationManager

<h3>Редактировать фильм</h3>

@if (movie is null)
{
    <p>Загрузка...</p>
}
else
{
    <EditForm Model="@movie" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label>Название:</label>
            <InputText class="form-control" @bind-Value="movie.Title" />
        </div>
        <div class="mb-3">
            <label>Описание:</label>
            <InputTextArea class="form-control" @bind-Value="movie.Description" />
        </div>
        <div class="mb-3">
            <label>Жанр:</label>
            <InputText class="form-control" @bind-Value="movie.Genre" />
        </div>
        <div class="mb-3">
            <label>Дата выхода:</label>
            <InputDate class="form-control" @bind-Value="movie.ReleaseDate" />
        </div>
        <div class="mb-3">
            <label>Рейтинг:</label>
            <InputNumber class="form-control" @bind-Value="movie.Rating" />
        </div>
        <button class="btn btn-primary" type="submit">Сохранить изменения</button>
    </EditForm>
}

@code {
    [Parameter] public int id { get; set; }
    private Movie movie;

    protected override async Task OnInitializedAsync()
    {
        movie = await MovieService.GetMovieByIdAsync(id);
    }

    async Task HandleValidSubmit()
    {
        await MovieService.UpdateMovieAsync(movie);
        NavigationManager.NavigateTo("/");
    }
}
