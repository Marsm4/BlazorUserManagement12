@page "/a"
@inject MovieService MovieService
@using BlazorMovieApp.Models
@using BlazorMovieApp.Services
@inject NavigationManager NavigationManager

<h3 class="text-2xl font-bold mb-4">Список фильмов</h3>

@if (MovieService.Movies.Count == 0)
{
    <p>Загрузка фильмов...</p>
}
else
{
    <table class="table-auto w-full border">
        <thead>
            <tr class="bg-gray-200">
                <th class="px-4 py-2">Название</th>
                <th class="px-4 py-2">Описание</th>
                <th class="px-4 py-2">Жанр</th>
                <th class="px-4 py-2">Рейтинг</th>
                <th class="px-4 py-2">Дата выхода</th>
                <th class="px-4 py-2">Действия</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var movie in MovieService.Movies)
            {
                <tr>
                    <td class="border px-4 py-2">@movie.Title</td>
                    <td class="border px-4 py-2">@movie.Description</td>
                    <td class="border px-4 py-2">@movie.Genre</td>
                    <td class="border px-4 py-2">@movie.Rating</td>
                    <td class="border px-4 py-2">@movie.ReleaseDate.ToShortDateString()</td>
                    <td class="border px-4 py-2">
                        <button class="bg-blue-500 text-white px-2 py-1 rounded" @onclick="@(() => NavigationManager.NavigateTo($"/movies/details/{movie.Id}"))">Детали</button>
                        <button class="bg-red-500 text-white px-2 py-1 rounded ml-2" @onclick="@(() => DeleteMovie(movie.Id))">Удалить</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await MovieService.RefreshMoviesList(); // Загружаем список фильмов при инициализации
    }

    private async Task DeleteMovie(int id)
    {
        await MovieService.DeleteMovieAsync(id);
    }
}